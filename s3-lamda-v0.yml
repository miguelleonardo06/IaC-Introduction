AWSTemplateFormatVersion: 2010-09-09
Description: "Sample Lambda Function using CFN"
Parameters:
  functionName:
    Type: String 
    Description: "Lambda Function Name"
    Default: "fnHelloWorldCfn"

  S3Bucket:
    Type: String 
    Description: "S3 Bucket Name where Lambda code is stored"
    Default: "mgl-trn-cfn-scripts"

  lambdaZipFile:
    Type: String 
    Description: "Lambda Zip File in the bucket lambda/ folder"
    Default: "s3_lambda-v0.py.zip"

  lambdaHandler:
    Description: "Lambda Handler Function Name"
    Type: String
    Default: "s3_lambda.handler"

Resources: 
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Join ["/", ["lambda", !Ref lambdaZipFile]]
      Description: "Sample Lambda using CFN"
      FunctionName: !Ref functionName
      Handler: !Ref lambdaHandler
      Role: !GetAtt LambdaFunctionRole.Arn
      Runtime: "python3.12"
      Timeout: 60

  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: 
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Description: !Join [" ", ["IAM Role for", !Ref functionName, "Lambda function"]]
      RoleName: !Join ["-", [!Ref functionName, "lambda", "role"]]
      Policies:
        - PolicyName: !Join ["-", [!Ref functionName, "execution", "policy"]]
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                Resource:
                  - "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Join ["", ["arn:aws:logs:*:*:log-group:/aws/lambda/", !Ref functionName, ":*"]]
